{"version":3,"sources":["../../src/newClasses/docker-container.js"],"names":["DockerContainer","id","name","ports","image","Id","Image","Names","Ports","console","log","replace","map","port","DockerPort","fromDockerSyntax","toDockerSyntax","getAll","containers","find","container","$dockerApi","listContainers","all","dockerContainers","DockerObject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;IAKqBA,e;;;;;AACnB,6BAKQ;AAAA;;AAAA,mFAAJ,EAAI;AAAA,QAJNC,EAIM,QAJNA,EAIM;AAAA,QAHNC,IAGM,QAHNA,IAGM;AAAA,QAFNC,KAEM,QAFNA,KAEM;AAAA,QADNC,KACM,QADNA,KACM;;AAAA;AACN;AAEA,UAAKH,EAAL,GAAaA,EAAb,EACA,MAAKC,IAAL,GAAaA,IADb;AAEA,UAAKC,KAAL,GAAaA,KAAb;AACA,UAAKC,KAAL,GAAaA,KAAb;AANM;AAOP;;;;4CAoBE;AAAA,2BALDC,EAKC;AAAA,UALDA,EAKC,yBALO,KAAKJ,EAKZ;AAAA,8BAJDK,KAIC;AAAA,UAJDA,KAIC,4BAJO,KAAKF,KAIZ;AAAA,8BAFDG,KAEC;AAAA,UAFDA,KAEC,4BAFO,IAEP;AAAA,8BADDC,KACC;AAAA,UADDA,KACC,4BADO,IACP;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AAEA,WAAKJ,EAAL,GAAaI,EAAb;AACA,WAAKD,KAAL,GAAaE,KAAb;AAEA,WAAKJ,IAAL,GAAaK,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAL,CAASI,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAH,GAAiC,KAAKT,IAAxD;AACA,WAAKC,KAAL,GAAaK,KAAK,GAAGA,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI;AAAA,eAAI,IAAIC,YAAJ,GAAiBC,gBAAjB,CAAkCF,IAAlC,CAAJ;AAAA,OAAd,CAAH,GAAgE,KAAKV,KAAvF;AAEA,aAAO,IAAP;AACD;;;qCAEgB;AACf,aAAO;AACLE,QAAAA,EAAE,EAAK,KAAKJ,EADP;AAELK,QAAAA,KAAK,EAAE,KAAKF,KAFP;AAILG,QAAAA,KAAK,EAAE,YAAK,KAAKL,IAAV,EAJF;AAKLM,QAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWS,GAAX,CAAe,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACG,cAAL,EAAJ;AAAA,SAAnB;AALF,OAAP;AAOD;;;;;;oDAtCgBd,I;;;;;;;uBACUF,eAAe,CAACiB,MAAhB,E;;;AAAnBC,gBAAAA,U;iDAECA,UAAU,CAACC,IAAX,CAAgB,UAAAC,SAAS;AAAA,yBAAIA,SAAS,CAAClB,IAAV,GAAiBA,IAArB;AAAA,iBAAzB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIwBmB,UAAU,CAACC,cAAX,CAA0B;AAAEC,kBAAAA,GAAG,EAAE;AAAP,iBAA1B,C;;;AAAzBC,gBAAAA,gB;kDAECxB,eAAe,CAACY,GAAhB,CAAoBY,gBAApB,EAAsC,IAAtC,C;;;;;;;;;;;;;;;;;;EAxBkCC,c;;;AAsD5C","sourcesContent":["import {\r\n  DockerObject,\r\n  DockerPort,\r\n} from './';\r\n\r\nexport default class DockerContainer extends DockerObject {\r\n  constructor({\r\n    id,\r\n    name,\r\n    ports,\r\n    image,\r\n  } = {}) {\r\n    super();\r\n\r\n    this.id    = id,\r\n    this.name  = name;\r\n    this.ports = ports;\r\n    this.image = image;\r\n  }\r\n\r\n  static async get(name) {\r\n    const containers = await DockerContainer.getAll();\r\n\r\n    return containers.find(container => container.name = name);\r\n  }\r\n\r\n  static async getAll() {\r\n    const dockerContainers = await $dockerApi.listContainers({ all: true });\r\n\r\n    return DockerContainer.map(dockerContainers, true);\r\n  }\r\n\r\n  fromDockerSyntax({\r\n    Id    = this.id,\r\n    Image = this.image,\r\n\r\n    Names = null,\r\n    Ports = null,\r\n  }) {\r\n    console.log(Id);\r\n\r\n    this.id    = Id;\r\n    this.image = Image;\r\n\r\n    this.name  = Names ? Names[0].replace(/^\\//, '') : this.name;\r\n    this.ports = Ports ? Ports.map(port => new DockerPort().fromDockerSyntax(port)) : this.ports;\r\n\r\n    return this;\r\n  }\r\n\r\n  toDockerSyntax() {\r\n    return {\r\n      Id   : this.id,\r\n      Image: this.image,\r\n\r\n      Names: [`/${this.name}`],\r\n      Ports: this.ports.map(port => port.toDockerSyntax()),\r\n    };\r\n  }\r\n};\r\n"],"file":"docker-container.js"}