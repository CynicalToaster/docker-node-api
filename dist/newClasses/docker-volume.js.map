{"version":3,"sources":["../../src/newClasses/docker-volume.js"],"names":["DockerVolume","ip","type","publicPort","privatePort","IP","Type","PublicPort","PrivatePort","object","dockerSyntax","Array","isArray","map","port","DockerPort","fromDockerSyntax"],"mappings":";;;;;;;;;;;;;IAAqBA,Y;;;AACnB,0BAKU;AAAA,mFAAJ,EAAI;AAAA,uBAJRC,EAIQ;AAAA,QAJRA,EAIQ,wBAJM,SAIN;AAAA,yBAHRC,IAGQ;AAAA,QAHRA,IAGQ,0BAHM,KAGN;AAAA,+BAFRC,UAEQ;AAAA,QAFRA,UAEQ,gCAFM,IAEN;AAAA,gCADRC,WACQ;AAAA,QADRA,WACQ,iCADM,IACN;;AAAA;AACR,SAAKH,EAAL,GAAmBA,EAAnB;AACA,SAAKC,IAAL,GAAmBA,IAAnB;AACA,SAAKC,UAAL,GAAmBA,UAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;;;4CAuBE;AAAA,2BAJDC,EAIC;AAAA,UAJDA,EAIC,yBAJa,KAAKJ,EAIlB;AAAA,6BAHDK,IAGC;AAAA,UAHDA,IAGC,2BAHa,KAAKJ,IAGlB;AAAA,mCAFDK,UAEC;AAAA,UAFDA,UAEC,iCAFa,KAAKJ,UAElB;AAAA,oCADDK,WACC;AAAA,UADDA,WACC,kCADa,KAAKJ,WAClB;AACD,WAAKH,EAAL,GAAmBI,EAAnB;AACA,WAAKH,IAAL,GAAmBI,IAAnB;AACA,WAAKH,UAAL,GAAmBI,UAAnB;AACA,WAAKH,WAAL,GAAmBI,WAAnB;AAEA,aAAO,IAAP;AACD;;;qCAEgB;AACf,aAAO;AACLH,QAAAA,EAAE,EAAW,KAAKJ,EADb;AAELK,QAAAA,IAAI,EAAS,KAAKJ,IAFb;AAGLK,QAAAA,UAAU,EAAG,KAAKJ,UAHb;AAILK,QAAAA,WAAW,EAAE,KAAKJ;AAJb,OAAP;AAMD;;;wBArCUK,M,EAA8B;AAAA,UAAtBC,YAAsB,uEAAP,KAAO;;AACvC,UAAIC,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;AACzB,eAAOA,MAAM,CAACI,GAAP,CAAW,UAAAC,IAAI;AAAA,iBAAIC,UAAU,CAACF,GAAX,CAAeC,IAAf,CAAJ;AAAA,SAAf,CAAP;AACD;;AAED,UAAIL,MAAM,YAAYM,UAAtB,EAAkC;AAChC,eAAON,MAAP;AACD;;AAED,UAAIC,YAAJ,EAAkB;AAChB,eAAO,IAAIK,UAAJ,GAAiBC,gBAAjB,CAAkCP,MAAlC,CAAP;AACD;;AAED,aAAO,IAAIM,UAAJ,CAAeN,MAAf,CAAP;AACD;;;;;;AAwBF","sourcesContent":["export default class DockerVolume {\r\n  constructor({\r\n    ip          = '0.0.0.0',\r\n    type        = 'tcp',\r\n    publicPort  = null,\r\n    privatePort = null,\r\n    } = {}) {\r\n    this.ip          = ip;\r\n    this.type        = type;\r\n    this.publicPort  = publicPort;\r\n    this.privatePort = privatePort;\r\n  }\r\n\r\n  static map(object, dockerSyntax = false) {\r\n    if (Array.isArray(object)) {\r\n      return object.map(port => DockerPort.map(port));\r\n    }\r\n\r\n    if (object instanceof DockerPort) {\r\n      return object;\r\n    }\r\n\r\n    if (dockerSyntax) {\r\n      return new DockerPort().fromDockerSyntax(object);\r\n    }\r\n\r\n    return new DockerPort(object);\r\n  }\r\n\r\n  fromDockerSyntax({\r\n    IP          = this.ip,\r\n    Type        = this.type,\r\n    PublicPort  = this.publicPort,\r\n    PrivatePort = this.privatePort,\r\n  }) {\r\n    this.ip          = IP;\r\n    this.type        = Type;\r\n    this.publicPort  = PublicPort;\r\n    this.privatePort = PrivatePort;\r\n\r\n    return this;\r\n  }\r\n\r\n  toDockerSyntax() {\r\n    return {\r\n      IP         : this.ip,\r\n      Type       : this.type,\r\n      PublicPort : this.publicPort,\r\n      PrivatePort: this.privatePort,\r\n    };\r\n  }\r\n};\r\n"],"file":"docker-volume.js"}