{"version":3,"sources":["../../src/classes/docker-container.js"],"names":["DockerContainer","id","name","image","scope","command","ports","volumes","DockerPort","map","DockerVolume","status","get","fullName","container","Object","assign","Id","Image","Command","Names","Ports","Mounts","replace","Tty","port","toDockerSyntax","volume","HostConfig","Binds","filter","v","type","src","dest","Promise","resolve","reject","$dockerApi","createContainer","then","err","statusCode","canAutoCreate","dockerContainer","getContainer","start","pullStatus","create","stop","restart","inspect","State","Status","user","getAll","containers","find","c","listContainers","all","dockerContainers","DockerObject"],"mappings":"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","sourcesContent":["import {\n  DockerObject,\n  DockerVolume,\n  DockerPort,\n} from '.';\n\nexport default class DockerContainer extends DockerObject {\n  constructor({\n    id,\n    name,\n    image,\n    scope,\n    command,\n    ports   = [],\n    volumes = [],\n  } = {}) {\n    super();\n\n    this.id = id;\n    this.name = name;\n    this.scope = scope;\n    this.image = image;\n    this.command = command;\n\n    this.ports = DockerPort.map(ports);\n    this.volumes = DockerVolume.map(volumes);\n\n    this.status = null;\n  }\n\n  static async get(name) {\n    const containers = await this.getAll();\n\n    return containers.find(c => c.fullName === name);\n  }\n\n  static async getAll() {\n    const dockerContainers = await $dockerApi.listContainers({ all: true });\n\n    return this.map(dockerContainers, true);\n  }\n\n  get fullName() {\n    let name = '';\n\n    name += `${$dockerApi.scope}.` || '';\n    name += `${$dockerApi.user}.` || '';\n    name += `${this.scope}.` || '';\n    name += this.name;\n\n    return name;\n  }\n\n  async get() {\n    const container = await DockerContainer.get(this.fullName);\n\n    Object.assign(this, container);\n    return this;\n  }\n\n  fromDockerSyntax({\n    Id      = this.id,\n    Image   = this.image,\n    Command = this.command,\n\n    Names  = null,\n    Ports  = null,\n    Mounts = null,\n  }) {\n    this.id      = Id;\n    this.image   = Image;\n    this.command = Command;\n\n    this.name    = Names  ? Names[0].replace(/^.+\\./, '')  : this.name;\n    this.scope   = Names  ? Names[0].replace(/^.+\\.([a-zA-Z]+)\\..+/, '$1')  : this.scope;\n    this.ports   = Ports  ? DockerPort.map(Ports, true)    : this.ports;\n    this.volumes = Mounts ? DockerVolume.map(Mounts, true) : this.volumes;\n\n    return this;\n  }\n\n  toDockerSyntax() {\n    return {\n      Tty: true,\n\n      Id     : this.id,\n      name   : this.fullName,\n      Image  : this.image,\n      Command: this.command,\n\n      Names : [`/${this.fullName}`],\n      Ports : this.ports.map(port => port.toDockerSyntax()),\n      Mounts: this.volumes.map(volume => volume.toDockerSyntax()),\n\n      HostConfig: {\n        Binds: this.volumes\n          .filter(v => v.type === 'bind')\n          .map(v => `${v.src}:${v.dest}`),\n      },\n    };\n  }\n\n  create() {\n    return new Promise((resolve, reject) => {\n      $dockerApi\n        .createContainer(this.toDockerSyntax())\n        .then(({ id }) => {\n          this.id = id;\n\n          resolve(this);\n        })\n        .catch(async (err) => {\n          switch (err.statusCode) {\n            case 409:\n              await this.get();\n              resolve(this);\n              break;\n\n            default:\n              reject(err);\n              break;\n          }\n        });\n    });\n  }\n\n  async start(canAutoCreate = true) {\n    if (!this.id) {\n      await this.get();\n    }\n\n    const dockerContainer = $dockerApi.getContainer(this);\n\n    return new Promise((resolve, reject) => {\n      dockerContainer.start()\n        .then(async () => {\n          await this.pullStatus();\n          resolve(this);\n        })\n        .catch(async (err) => {\n          switch (err.statusCode) {\n            case 304:\n              await this.pullStatus();\n              resolve(this);\n              break;\n\n            case 404:\n              if (canAutoCreate) {\n                await this.create();\n                await this.start(false);\n              }\n\n              resolve(this);\n              break;\n\n            default:\n              reject(err);\n              break;\n          }\n        });\n    });\n  }\n\n  async stop() {\n    if (!this.id) {\n      await this.get();\n    }\n\n    const dockerContainer = $dockerApi.getContainer(this);\n\n    return new Promise((resolve, reject) => {\n      dockerContainer.stop()\n        .then(async () => {\n          await this.pullStatus();\n          resolve(this);\n        })\n        .catch(async (err) => {\n          switch (err.statusCode) {\n            case 304:\n              await this.pullStatus();\n              resolve(this);\n              break;\n\n            case 404:\n              resolve(this);\n              break;\n\n            default:\n              reject(err);\n              break;\n          }\n        });\n    });\n  }\n\n  async restart() {\n    if (!this.id) {\n      await this.get();\n    }\n\n    const dockerContainer = $dockerApi.getContainer(this);\n\n    return new Promise((resolve, reject) => {\n      dockerContainer.restart()\n        .then(async () => {\n          await this.pullStatus();\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  pullStatus() {\n    const dockerContainer = $dockerApi.getContainer(this);\n\n    return new Promise((resolve) => {\n      dockerContainer.inspect()\n        .then(({ State }) => {\n          this.status = State.Status;\n\n          resolve(this);\n        })\n        .catch(() => {\n          resolve(this);\n        });\n    });\n  }\n}\n"],"file":"docker-container.js"}