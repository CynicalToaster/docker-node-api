{"version":3,"sources":["../../src/classes/DockerApi.js"],"names":["DockerApi","user","scope","options","_docker","Docker","group","service","DockerContainer","getContainerName","create","containers","listContainers","all","then","list","forEach","dockerContainer","console","log","push","Names","id","Id","image","Image","ports","Ports","map","port","DockerPort","dockerFormat","name","find","container"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;IAKqBA,S;;;AACnB,uBAAuD;AAAA,QAA3CC,IAA2C,uEAApC,IAAoC;AAAA,QAA9BC,KAA8B,uEAAtB,IAAsB;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;AAAA;AACrD,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AAEA,SAAKE,OAAL,GAAe,IAAIC,qBAAJ,CAAWF,OAAX,CAAf;AACD;;;;qCAEgBG,K,EAAOC,O,EAAS;AAC/B,uBAAU,KAAKL,KAAf,cAAwB,KAAKD,IAA7B,cAAqCK,KAArC,cAA8CC,OAA9C;AACD;;;oCAEeA,O,EAASJ,O,EAAS;AAChC,aAAO,IAAIK,iBAAJ,CACL,KAAKC,gBAAL,CAAsB,WAAtB,EAAmCF,OAAnC,CADK,EAELJ,OAFK,EAGL,KAAKC,OAHA,EAILM,MAJK,EAAP;AAKD;;;;;;;;;;;;;;AAGOC,gBAAAA,U,GAAa,E;;uBAEb,KAAKP,OAAL,CAAaQ,cAAb,CAA4B;AAAEC,kBAAAA,GAAG,EAAE;AAAP,iBAA5B,EACHC,IADG,CACE,UAACC,IAAD,EAAU;AACdA,kBAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,eAAD,EAAqB;AAChCC,oBAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AAEAN,oBAAAA,UAAU,CAACS,IAAX,CACE,IAAIZ,iBAAJ,CACES,eAAe,CAACI,KAAhB,CAAsB,CAAtB,CADF,EAEE;AACEC,sBAAAA,EAAE,EAAEL,eAAe,CAACM,EADtB;AAEEC,sBAAAA,KAAK,EAAEP,eAAe,CAACQ,KAFzB;AAGEC,sBAAAA,KAAK,EAAET,eAAe,CAACU,KAAhB,CAAsBC,GAAtB,CAA0B,UAAAC,IAAI;AAAA,+BAAI,IAAIC,YAAJ,GAAiBC,YAAjB,CAA8BF,IAA9B,CAAJ;AAAA,uBAA9B;AAHT,qBAFF,EAOE,KAAI,CAACzB,OAPP,CADF;AAWD,mBAdD;AAeD,iBAjBG,C;;;iDAmBCO,U;;;;;;;;;;;;;;;;;;;;;qDAGUqB,I;;;;;;;;;uBACQ,KAAKpB,cAAL,E;;;AAAnBD,gBAAAA,U;kDAECA,UAAU,CAACsB,IAAX,CAAgB,UAACC,SAAD,EAAe;AACpCA,kBAAAA,SAAS,CAACF,IAAV,GAAiB,MAAI,CAACvB,gBAAL,CAAsB,WAAtB,EAAmCuB,IAAnC,CAAjB;AACD,iBAFM,C","sourcesContent":["import Docker from 'dockerode';\n\nimport {\n  DockerPort,\n  DockerContainer,\n} from './'; \n\nexport default class DockerApi {\n  constructor(user = null, scope = null, options = null) {\n    this.user = user;\n    this.scope = scope;\n\n    this._docker = new Docker(options);\n  }\n\n  getContainerName(group, service) {\n    return `${this.scope}.${this.user}.${group}.${service}`;\n  }\n\n  createContainer(service, options) {\n    return new DockerContainer(\n      this.getContainerName('testGroup', service),\n      options,\n      this._docker,\n    ).create();\n  }\n\n  async listContainers() {\n    const containers = [];\n\n    await this._docker.listContainers({ all: true })\n      .then((list) => {\n        list.forEach((dockerContainer) => {\n          console.log(dockerContainer);\n\n          containers.push(\n            new DockerContainer(\n              dockerContainer.Names[0],\n              {\n                id: dockerContainer.Id,\n                image: dockerContainer.Image,\n                ports: dockerContainer.Ports.map(port => new DockerPort().dockerFormat(port))\n              },\n              this._docker,\n            ),\n          );\n        })\n      });\n  \n    return containers;\n  }\n\n  async getContainer(name) {\n    const containers = await this.listContainers();\n\n    return containers.find((container) => {\n      container.name = this.getContainerName('testGroup', name);\n    });\n  }\n}\n"],"file":"DockerApi.js"}