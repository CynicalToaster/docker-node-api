{"version":3,"sources":["../../src/classes/docker-stack.js"],"names":["DockerStack","scope","containers","_applyScope","forEach","container","promises","push","create","Promise","all","start","stop","restart"],"mappings":";;;;;;;;;;;;;;;;;IAAqBA,W;;;AACnB,yBAGQ;AAAA,mFAAJ,EAAI;AAAA,0BAFNC,KAEM;AAAA,QAFNA,KAEM,2BAFO,IAEP;AAAA,+BADNC,UACM;AAAA,QADNA,UACM,gCADO,EACP;;AAAA;AACN,SAAKD,KAAL,GAAkBA,KAAlB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;;AAEA,SAAKC,WAAL;AACD;;;;kCAEa;AAAA;;AACZ,WAAKD,UAAL,CAAgBE,OAAhB,CAAwB,UAACC,SAAD,EAAe;AACrCA,QAAAA,SAAS,CAACJ,KAAV,GAAkB,KAAI,CAACA,KAAvB;AACD,OAFD;AAGD;;;;;;;;;;;;AAGOK,gBAAAA,Q,GAAW,E;AAEjB,qBAAKJ,UAAL,CAAgBE,OAAhB,CAAwB,UAACC,SAAD,EAAe;AACrCC,kBAAAA,QAAQ,CAACC,IAAT,CAAcF,SAAS,CAACG,MAAV,EAAd;AACD,iBAFD;;uBAIMC,OAAO,CAACC,GAAR,CAAYJ,QAAZ,C;;;iDAEC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIDA,gBAAAA,Q,GAAW,E;AAEjB,qBAAKJ,UAAL,CAAgBE,OAAhB,CAAwB,UAACC,SAAD,EAAe;AACrCC,kBAAAA,QAAQ,CAACC,IAAT,CAAcF,SAAS,CAACM,KAAV,EAAd;AACD,iBAFD;;uBAIMF,OAAO,CAACC,GAAR,CAAYJ,QAAZ,C;;;kDAEC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIDA,gBAAAA,Q,GAAW,E;AAEjB,qBAAKJ,UAAL,CAAgBE,OAAhB,CAAwB,UAACC,SAAD,EAAe;AACrCC,kBAAAA,QAAQ,CAACC,IAAT,CAAcF,SAAS,CAACO,IAAV,EAAd;AACD,iBAFD;;uBAIMH,OAAO,CAACC,GAAR,CAAYJ,QAAZ,C;;;kDAEC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIDA,gBAAAA,Q,GAAW,E;AAEjB,qBAAKJ,UAAL,CAAgBE,OAAhB,CAAwB,UAACC,SAAD,EAAe;AACrCC,kBAAAA,QAAQ,CAACC,IAAT,CAAcF,SAAS,CAACQ,OAAV,EAAd;AACD,iBAFD;;uBAIMJ,OAAO,CAACC,GAAR,CAAYJ,QAAZ,C;;;kDAEC,I","sourcesContent":["export default class DockerStack {\n  constructor({\n    scope      = null,\n    containers = [],\n  } = {}) {\n    this.scope      = scope;\n    this.containers = containers;\n\n    this._applyScope();\n  }\n\n  _applyScope() {\n    this.containers.forEach((container) => {\n      container.scope = this.scope;\n    });\n  }\n\n  async create() {\n    const promises = [];\n\n    this.containers.forEach((container) => {\n      promises.push(container.create());\n    });\n\n    await Promise.all(promises);\n\n    return this;\n  }\n\n  async start() {\n    const promises = [];\n\n    this.containers.forEach((container) => {\n      promises.push(container.start());\n    });\n\n    await Promise.all(promises);\n\n    return this;\n  }\n\n  async stop() {\n    const promises = [];\n\n    this.containers.forEach((container) => {\n      promises.push(container.stop());\n    });\n\n    await Promise.all(promises);\n\n    return this;\n  }\n\n  async restart() {\n    const promises = [];\n\n    this.containers.forEach((container) => {\n      promises.push(container.restart());\n    });\n\n    await Promise.all(promises);\n\n    return this;\n  }\n}\n"],"file":"docker-stack.js"}